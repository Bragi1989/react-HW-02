{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\react-HW-02\\\\src\\\\components\\\\FeedbackOptions.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = _ref => {\n  let {\n    title,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n_c = Section;\nconst FeedbackOptions = _ref2 => {\n  let {\n    options,\n    onLeaveFeedback\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => onLeaveFeedback(option),\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n_c2 = FeedbackOptions;\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good: \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Neutral: \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bad: \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Positive Feedback: \", positivePercentage, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n_c3 = Statistics;\nconst Notification = _ref4 => {\n  let {\n    message\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 39\n  }, this);\n};\n_c4 = Notification;\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n    this.countPositiveFeedbackPercentage = () => {\n      const {\n        good\n      } = this.state;\n      const total = this.countTotalFeedback();\n      return total === 0 ? 0 : Math.round(good / total * 100);\n    };\n    this.handleLeaveFeedback = option => {\n      this.setState(prevState => ({\n        [option]: prevState[option] + 1\n      }));\n    };\n  }\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: ['good', 'neutral', 'bad'],\n          onLeaveFeedback: this.handleLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), totalFeedback > 0 ? /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: totalFeedback,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired\n};\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"FeedbackOptions\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"Notification\");","map":{"version":3,"names":["React","Component","PropTypes","jsxDEV","_jsxDEV","Section","_ref","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","FeedbackOptions","_ref2","options","onLeaveFeedback","map","option","type","onClick","_c2","Statistics","_ref3","good","neutral","bad","total","positivePercentage","_c3","Notification","_ref4","message","_c4","App","constructor","arguments","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","handleLeaveFeedback","setState","prevState","render","totalFeedback","propTypes","string","isRequired","node","arrayOf","func","number","$RefreshReg$"],"sources":["D:/GitHub/react-HW-02/src/components/FeedbackOptions.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    {options.map(option => (\r\n      <button key={option} type=\"button\" onClick={() => onLeaveFeedback(option)}>\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive Feedback: {positivePercentage}%</p>\r\n  </div>\r\n);\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return total === 0 ? 0 : Math.round((good / total) * 100);\r\n  };\r\n\r\n  handleLeaveFeedback = option => {\r\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedback = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Leave feedback\">\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={this.handleLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        {totalFeedback > 0 ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalFeedback}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <Notification message=\"There is no feedback\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}