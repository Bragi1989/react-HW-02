{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\react-HW-02\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + neutral + bad;\n    };\n    this.countPositiveFeedbackPercentage = () => {\n      const {\n        good\n      } = this.state;\n      const total = this.countTotalFeedback();\n      return total === 0 ? 0 : Math.round(good / total * 100);\n    };\n    this.handleLeaveFeedback = option => {\n      this.setState(prevState => ({\n        [option]: prevState[option] + 1\n      }));\n    };\n  }\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: ['good', 'neutral', 'bad'],\n          onLeaveFeedback: this.handleLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), totalFeedback > 0 ? /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: totalFeedback,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n}\nApp.propTypes = {\n  // Примеры PropTypes для компонента App\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired\n};\nexport default App;","map":{"version":3,"names":["React","Component","Section","FeedbackOptions","Statistics","Notification","PropTypes","jsxDEV","_jsxDEV","App","constructor","arguments","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","total","Math","round","handleLeaveFeedback","option","setState","prevState","render","totalFeedback","positivePercentage","children","title","options","onLeaveFeedback","fileName","_jsxFileName","lineNumber","columnNumber","message","propTypes","number","isRequired"],"sources":["D:/GitHub/react-HW-02/src/components/App.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Section from './components/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Statistics from './components/Statistics';\r\nimport Notification from './components/Notification';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return total === 0 ? 0 : Math.round((good / total) * 100);\r\n  };\r\n\r\n  handleLeaveFeedback = option => {\r\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedback = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Leave feedback\">\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={this.handleLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        {totalFeedback > 0 ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={totalFeedback}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          </Section>\r\n        ) : (\r\n          <Notification message=\"There is no feedback\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  // Примеры PropTypes для компонента App\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}